<blocky>


    <div class="identicon">
        <a if={ this.isWalletConnected() }
           class="identicon-address"
           href="https://etherscan.io/address/{ this.accountAddress() }"
           target="_blank">
            <span>{ state.obfuscatedAccount }</span>
        </a>
        <a if={ !this.isWalletConnected() }
           class="identicon-address"
           onclick={ this.connectWallet }>
            <span>{ this.i18next.t('wallet.connect_wallet') }</span>
        </a>
        <img if={ this.isWalletConnected() }
            class="identicon-image"
            src={ state.blocky }
            alt="blocky"
            onclick={ this.switchWallet }
        />
    </div>

    <script>
        import './blocky.css'
        import {accountAddress, registerForWalletChanges} from "../../../common/wallet/wallet_manager";
        import makeBlockie from 'ethereum-blockies-base64';

        let blocky;

        export default {

            state: {
                address: "0x0000000000000000000000000000000000000000",
                obfuscatedAccount: null,
                blocky: null
            },

            onBeforeUpdate() {
                this.handleAccounts()
            },

            onMounted() {
                registerForWalletChanges(this)
            },

            onWalletChanges() {
                this.handleAccounts()
                this.update()
            },

            handleAccounts() {

                if (accountAddress() !== undefined) {
                    this.state.address = accountAddress()
                }

                this.state.obfuscatedAccount = this.state.address.substr(0, 8) + '...' + this.state.address.substr(38, 40)
                this.state.blocky = makeBlockie(this.state.address)
            }

        }
    </script>
</blocky>
