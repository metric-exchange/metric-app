<main>

    <header class="header">
        <div class="header-logo">
            <img width="142" height="32" src={ config.Logo }>
        </div>

        <div class="header-links">
        </div>

        <div class="header-settings">
            <settings/>
        </div>

    </header>

    <div class="main-content" if={ state.showZrxStakeView }>
        <zrx-stake/>
    </div>

    <div class="main-content" if={ !state.showZrxStakeView }>

        <router>
            <route path="/#/trade(.*)">
                <trading-main url-manager={ state.urlManager } />
            </route>
            <route path="/#/compete(.*)">
                <trading-competition-dashboard url-manager={ state.urlManager } />
            </route>
            <route path="/">
                <board-selector
                        select-board={ selectBoard }
                />
            </route>
        </router>

    </div>

    <script>
        import './index.css'
        import Settings from '../settings/index.riot'
        import ZrxStake from '../zrxStake/index.riot'
        import TradingMain from '../tradingMain/index.riot'
        import TradingCompetitionDashboard from '../tradingCompetitionDashboard/index.riot'
        import BoardSelector from '../boardSelector/index.riot'
        import {initLocalizations} from "../../common/localization/localize";
        import Logo from '../themeColors/logo.svg';
        import {Router, Route, setBase, router} from "@riotjs/route";
        import {UrlManager} from "../../common/url/UrlManager";

        export default {
            components: {
                Settings,
                ZrxStake,
                TradingMain,
                TradingCompetitionDashboard,
                BoardSelector,
                Logo,
                Route,
                Router
            },
            config: {
                Logo: Logo
            },
            state: {
                urlManager: new UrlManager(),
                showZrxStakeView: false,
                selectedBoard: 0
            },
            onBeforeMount() {
                if (this.state.urlManager.sanitizeUrl([])) {
                    router.push(`/`)
                }
                initLocalizations()
                document.title = "Metric Exchange"
            },
            async onMounted() {
                setBase(`/`)
                this.i18next.on("languageChanged", (lng, ns) => {
                    this.update()
                })
            },
            onUpdated() {
                if (this.state.urlManager.sanitizeUrl([])) {
                    router.push(`/`)
                }
            },
            selectBoard(id) {

                if (id === this.SelectedBoardId.TRADING) {
                    router.push(`/#/trade`)
                }

                if (id === this.SelectedBoardId.COMPETITION) {
                    router.push("/#/compete")
                }
            }
        }
    </script>

</main>
