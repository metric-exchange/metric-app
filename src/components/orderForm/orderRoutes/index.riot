<order-routes>

    <div>{ formatRoutes(props.orderFactory.order.sellPrice.routes) }</div>

    <script>
        import {tokensList} from "../../../common/tokens/token_fetch";

        export default {

            onMounted() {
                this.props.orderFactory.order.sellPrice.price.observe(this, 'onPriceChange')
            },

            onPriceChange(source) {
                this.update()
            },

            formatRoutes(routes) {
                let message = ""

                if (routes.length === 0) {
                    return message
                }

                message = routes.map(r => `${this.formatName(r)} ${this.formatNumber(parseFloat(r.proportion)*100)}%`).reduce((a,b) => `${a}, ${b}`)

                return `Route: ${message}`
            },

            formatName(route) {
                if (route.name === "MultiHop") {
                    let token = tokensList().find(t => t.address.toLowerCase() === route.intermediateToken.toLowerCase())

                    return `${route.hops[0]} → ${token.symbol} → ${route.hops[1]}`
                }

                return route.name
            }
        }
    </script>

</order-routes>